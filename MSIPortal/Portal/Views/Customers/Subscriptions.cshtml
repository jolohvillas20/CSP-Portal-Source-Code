@*@model IEnumerable<Portal.Models.Subscriptions>*@

@model IPagedList<Portal.Models.SubscriptionVM>
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Subscription";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .ActiveStatus{
        color:green;
        font-weight:500;
    }
</style>

<div class="row bg-title">
    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
        <h4 class="page-title">@ViewBag.CustomerName - Subscription</h4>
    </div>
</div>


@{

    Portal.Models.SubscriptionVM subscriptionVM = ViewData["SubscriptionVM"] as Portal.Models.SubscriptionVM;
}

@if (ViewBag.ErrorCategory == "Forbidden")
{
    <div class="white-box">
        <label>User doesn't have the necessary permissions.</label>
    </div>
}
else {
    <div class="white-box">
        @using (Html.BeginForm())
        {
            <div id="myModal" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <label style="font-weight:300;">Specify the details of the individual at the customer's organization who accepted the <a style="color:dodgerblue" href="https://docs.microsoft.com/en-us/partner-center/agreements">Microsoft Cloud Agreement</a> </label>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="usr">@Html.LabelFor(model => subscriptionVM.FirstName) <span>*</span></label>
                                        <input class="form-control" id="txtFirstName" />
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="usr">@Html.LabelFor(model => subscriptionVM.LastName) <span>*</span></label>
                                        <input class="form-control" id="txtLastName" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="usr">@Html.LabelFor(model => subscriptionVM.EmailAddress) <span>*</span></label>
                                        <input class="form-control" id="txtEmailAddress" />
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="usr">@Html.LabelFor(model => subscriptionVM.PhoneNumber) <span>*</span></label>
                                        <input class="form-control" id="txtPhoneNumber" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label for="usr">@Html.LabelFor(model => subscriptionVM.AgreementDate) <span>*</span></label>
                                        <input class="form-control" type="date" id="txtAgreementDate" />
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    &nbsp;
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div style="text-align:left">
                                <button onclick="mcasubscription(this)" class="btn btn-danger">Save and continue</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            </div>

                        </div>
                    </div>

                </div>
            </div>


            <div class="row ToolsHolder">
                <div class="col-2">
                    @if ((Portal.Helpers.Sessions.ResellerStatus == 1 && Portal.Helpers.Sessions.UserTypeID == 5)
                    || Portal.Helpers.Sessions.UserTypeID == 1)
                    {

                        if (ViewBag.IsMCAAgreed == false)
                        {
                            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#myModal">Add Subsciption</button>
                            <label>No MCA</label>
                        }
                        else
                        {
                            <a href="@Url.Action("Create", "Orders", new { id = ViewBag.CID}, null)" class="btn btn-danger">Add Subscription</a>
                        }

                    }
                </div>
                <div class="col-3">
                    @Html.TextBox("SearchString", (string)ViewBag.CurrentFilter, new { @class = "form-control", @placeholder = "find" })
                </div>
                <div class="col-1 no-padding">
                    <input type="submit" value="Search" class="btn btn-danger" />

                </div>
            </div>
        }
        @*search*@

        <h3 class="box-title m-b-20">License-based subscriptions</h3>

        <div class="table-responsive">
            <table class="table color-bordered-table inverse-bordered-table CustomTableCursor">
                <thead>
                    <tr>
                        <th>
                            @Html.ActionLink("Offer Name", "Subscriptions", new { sortColumn = "offername", sortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
                            @*@Html.DisplayNameFor(model => model.OfferName)*@
                        </th>
                        <th>
                            @Html.ActionLink("Quantity", "Subscriptions", new { sortColumn = "quantity", sortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
                            @*@Html.DisplayNameFor(model => model.Quantity)*@
                        </th>
                        <th>
                            @Html.ActionLink("Status", "Subscriptions", new { sortColumn = "status", sortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
                            @*@Html.DisplayNameFor(model => model.Quantity)*@
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @*@foreach (var item in Model.Where(m => m.Offers.UnitType != "Usage-based"))*@
                    @foreach (var item in Model.Where(m => m.UnitType != "Usage-based"))
                    {
                    <tr onclick="location.href = '@(Url.Action("Subscription", "Customers", new {id = item.CustomerID, OfferID = item.OfferID }))'">
                        <td>
                            @Html.DisplayFor(modelItem => item.OfferName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity) @Html.DisplayFor(modelItem => item.UnitType)
                        </td>
                        <td>

                            @if (item.Status == "Active")
                            {
                                <label style="color:#53b553;font-weight:500">@item.Status</label>
                            }
                            else
                            {
                                <label style="color:lightcoral;font-weight:500">@item.Status</label>
                            }


                        </td>
                    </tr>
                    }
                </tbody>
            </table>


        </div>

        <h3 class="box-title m-b-20 m-t-20">Usage-based subscriptions</h3>


        <div class="table-responsive">
            <table class="table color-bordered-table inverse-bordered-table">
                <thead>
                    <tr>
                        <th>
                            @Html.ActionLink("Offer Name", "Subscriptions", new { sortColumn = "offername", sortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
                            @*@Html.DisplayNameFor(model => model.OfferName)*@
                        </th>
                        <th>
                            @Html.ActionLink("Quantity", "Subscriptions", new { sortColumn = "quantity", sortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
                            @*@Html.DisplayNameFor(model => model.Quantity)*@
                        </th>
                        <th>
                            @Html.ActionLink("Status", "Subscriptions", new { sortColumn = "status", sortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter })
                            @*@Html.DisplayNameFor(model => model.Quantity)*@
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @*@foreach (var item in Model.Where(m => m.UnitType == "Usage-based"))*@
                    @foreach (var item in Model.Where(m => m.UnitType == "Usage-based"))
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.OfferName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Count) @Html.DisplayFor(modelItem => item.UnitType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
            <!-- pager -->

            <div class="col-md-4 col-sm-12 no-padding pull-left" style="margin:20px 0px;">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>

            <div class="col-md-8 col-sm-12 no-padding pull-left" style="text-align:right;">
                @Html.PagedListPager(Model, page => Url.Action("Subscription",
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
            </div>

        </div>

    </div>
}





<script>

    var MCASubscriptions = '@Url.Action("MicrosoftCloudAgreement", "Customers")';

    function mcasubscription(e) {

        var strFirstName = document.getElementById("txtFirstName").value;
        var strLastName = document.getElementById("txtLastName").value;
        var strEmailAddress = document.getElementById("txtEmailAddress").value;
        var strPhoneNumber = document.getElementById("txtPhoneNumber").value;
        var strAgreementDate = document.getElementById("txtAgreementDate").value;
        var CustomerId = @ViewBag.CID;

         $.ajax({
            traditional: true,
            type: 'post',
            datatype: 'html',
             data: { FirstName: strFirstName, LastName: strLastName, EmailAddress: strEmailAddress, PhoneNumber: strPhoneNumber, AgreementDate: strAgreementDate, CID: CustomerId },
            url: MCASubscriptions,
            cache: true,
            success: function (request) {

                console.log(request + "|" + CustomerId);
                //@ViewBag.TokenStatus = request;
            },
            error: function (e) {
                console.log(e);
            },
            complete: function (e) {
                console.log(e);
            }
        });
    }

    $(document).ready(function () {

        //sidebar highlight
        $('#side-menu li:nth-child(3) a').addClass("active");

    });

    $('#txtSubscriptionPhoneNumber').keypress(function (event) {
        //alert("Hello");
        var keycode = event.which;
        if (!(event.shiftKey == false && (keycode == 46 || keycode == 46 || keycode == 8 || keycode == 37 || keycode == 39 || (keycode >= 48 && keycode <= 57 )))) {
            event.preventDefault();
        }
    });

</script>
